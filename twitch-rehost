#!/bin/bash
set -euo pipefail

[ "$#" -eq 0 ] && echo USAGE: "$0 [videos urls...]" && echo && echo "IMPLEMENTATION:" && cat "$0" && echo && exit #usage message for invalid number of arguments

# see youtube-upload-url in this util collection
# this does that, but sets the video to publish only when the VOD should have definitely disappeared from twitch, after the maximum limit of 60 days.
for i in "$@"; do
  json=$(youtube-dl --cookies cookies.txt --skip-download "$i" -j)
  timestamp_etc=${json##*timestamp\"\:\ }
  timestamp=${timestamp_etc%%\,*}
  let timestamp+=5184000 #60*60*24*60 = 60 days (two months) in seconds.
  date_string=$(date -d @"$timestamp" -u --iso-8601=seconds) #the time format is eg 2021-05-24T23:54:54+00:00, which youtubeuploader accepts.
  echo "{\"privacyStatus\": \"private\", \"publishAt\": \"$date_string\"}" >meta.json
  youtube-upload-url "$i" && mv meta.json prev.meta.json #don't want to contaminate future runs, but want to keep this around for immediate debugging purposes.
  #previous line makes sure youtube-upload-url is in the last line so that its error status is returned
done
