# This is utilrc, a file that sets up various aliases that I want, like bashrc. It's shell-agnostic to some extent. You should probably add . utilrc (sourcing utilrc) to your ~/.bashrc if you want to use this, or something.
# Fun fact: the "rc" in all these "rc" files stands for "run commands".
# My general philosophy for utilrc is to make anything that can be an independent bash program file an independent file, and only use this for things that can't be (because they have some side-effect for the current shell, like changing the working directory or changing the prompt for the session or quitting).
# utilrc is not a dotfile because dotfiles are, generally, stupid. Don't hide the files. Make the files real.

# Remember: if you mess up your original bashrc, you can (at least on ubuntu) do: cp /etc/skel/.bashrc ~/

# Aliases for mistyping "cd .."
alias cd..='cd ..'
alias ..='cd ..'

# Alias that lets you exit the shell with the pseudo-command "q"
alias q=exit

# la alias so that la will output color correctly. (See https://pubs.opengroup.org/onlinepubs/9699919799/utilities/ls.html for description of flags.)
# This alias is borrowed (with modification), from the .bashrc on Ubuntu (and maybe other bashrcs; who can say).
alias la='ls -Al'

# Make bash command prompt always show the status returned by the previously-run command.
# (The ⏎ doesn't display right in any text editor or terminal I have, but it's the unicode return symbol.)
PS1="\e[0;31m\$?\e[0m⏎$PS1"

# Make cd-wp a command you can always do (uses the wp command from util)
cdwp() {
  cd `wp "$@"`
}
alias cd-wp=cdwp #fun fact, I guess cd-wp is an invalid function name according to dash shell. It doesn't complain about this alias though (which I think it also technically invalid).

mkcd() { #MaKe, and Change to, a Directory. See also https://stackoverflow.com/questions/52071348/how-to-create-folder-and-cd-into-it-with-one-command/52071437#52071437 for more information.
  mkdir -p "$1"
  cd "$1"
}

# Only a fool would alias REM to # so that REM lines will work on unix. Luckily, I am a fool.
# Please note that this is case-sensitive. I have not aliased all the case variants; out of personal taste (I always write my REM lines with REM in caps, for visual distinctness), and also so that (*checks notes*) the rem command of the remind package will not conflict with this. This alias also does not end in a space, so the command after it will not be alias-expanded. This particular omission is on purpose (in the rest of the file the omissions were not carefully considered), because REM is supposed to be a comment so the less that is done in there the better.
alias REM='#'

# This variable is set just because I dislike typing out ~/.bashrc every time I want to look at my bashrc. (The mess of punctuation slows me down.)
# Note that it will not intelligently track your bashrc location or anything like that.
# The $(echo ) stuff is because tilde expansion won't happen otherwise anywhere in the chain if you try to type `cat $bashrc`; so we have to pre-expand it here.
bashrc=`echo ~/.bashrc`

ipse ~/.ipse # For fun, utilrc runs `ipse` (on shell startup), which is like `fortune`. It runs it on ~/.ipse, which I intend you to symlink to the actual ipse file you care about that lives somewhere else. (Notably, since ipse handles directories in a recursive manner, your .ipse file can be a directory of symlinks to other documents, or even a symlink to a directory of symlinks... etc...) You may also make .ipse an empty file to suppress this behavior.
